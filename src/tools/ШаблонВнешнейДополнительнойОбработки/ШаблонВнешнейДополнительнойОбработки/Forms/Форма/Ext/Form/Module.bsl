

&НаКлиенте
Процедура СохранитьНастройкиДляАвтоВыполнения(Команда)
	
   СохранитьНастройкиФормы();

КонецПроцедуры


&НаСервере
Процедура СохранитьНастройкиФормы()
	
	Если ЗначениеЗаполнено(Объект.ДополнительнаяОбработкаСсылка) Тогда
	
	    Настройки = Новый Соответствие;
	    //положим все значения реквизитов обработки
	    ОбъектОбработки = РеквизитФормыВЗначение("Объект");
		Для каждого ОписаниеРеквизита Из ОбъектОбработки.Метаданные().Реквизиты Цикл
		  Настройки.Вставить(ОписаниеРеквизита.Имя,Объект[ОписаниеРеквизита.Имя]);	
		КонецЦикла; 
		
		
		Попытка
			ЗаблокироватьДанныеДляРедактирования(Объект.ДополнительнаяОбработкаСсылка);
		Исключение
			ТекстОшибки = НСтр("ru='Не удалось заблокировать %Объект%. %ОписаниеОшибки%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Объект%", Объект.ДополнительнаяОбработкаСсылка);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ОписаниеОшибки%", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Объект.ДополнительнаяОбработкаСсылка);
			Возврат;
		КонецПопытки;

		ДополнительнаяОбработкаОбъект = Объект.ДополнительнаяОбработкаСсылка.ПолучитьОбъект();
		ДополнительнаяОбработкаОбъект.ХранилищеНастроек = Новый ХранилищеЗначения(Настройки);
		ДополнительнаяОбработкаОбъект.Записать();
		
	КонецЕсли;

КонецПроцедуры

&НаСервере 
Процедура ЗагрузитьНастройкиФормы()
	Если ЗначениеЗаполнено(Объект.ДополнительнаяОбработкаСсылка) Тогда
		ХранилищеНастроек = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ДополнительнаяОбработкаСсылка,"ХранилищеНастроек");
		Настройки = ХранилищеНастроек.Получить();
		
		Если Настройки <> Неопределено Тогда
			Для каждого ЭлементНастроек Из Настройки Цикл
				Объект[ЭлементНастроек.Ключ] = ЭлементНастроек.Значение;
			КонецЦикла; 
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры 


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.ДополнительнаяОбработкаСсылка = Параметры.ДополнительнаяОбработкаСсылка;
	ЗагрузитьНастройкиФормы();
КонецПроцедуры


&НаКлиенте
Процедура ВыполнитьСейчас(Команда)
	ВызватьВыполнениеФункционала();
КонецПроцедуры

&НаСервере
Процедура ВызватьВыполнениеФункционала()
  ОбъектОбработки = РеквизитФормыВЗначение("Объект");
  ОбъектОбработки.ВыполнитьФункционал(Параметры.ИдентификаторКоманды);	
КонецПроцедуры 





















////Для выполнение на серевере в фоновом режиме

//    ПараметрыКоманды = ДополнительныеОтчетыИОбработкиКлиент.ПараметрыВыполненияКомандыВФоне(Параметры.ДополнительнаяОбработкаСсылка);
//    СопровождающийТекст = НСтр("ru = '<Вставить представление выполняемой команды...>'");
//    ПараметрыКоманды.СопровождающийТекст = СопровождающийТекст;
//    Обработчик = Новый ОписаниеОповещения("ПослеЗавершенияДлительнойОперации", ЭтотОбъект, СопровождающийТекст);
//    ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьКомандуВФоне(Параметры.ИдентификаторКоманды, ПараметрыКоманды, Обработчик);


// Перехват окончания фонового выполнения
&НаКлиенте
Процедура ПослеЗавершенияДлительнойОперации(Операция, СопровождающийТекст) Экспорт
    // Добавить код приемки результата.
    // Например:
    //Если ТипЗнч(ВладелецФормы) = Тип("УправляемаяФорма") И Не ВладелецФормы.Модифицированность Тогда
    //    Попытка
    //        ВладелецФормы.Прочитать();
    //    Исключение
    //        // Значит это форма списка.
    //    КонецПопытки;
    //КонецЕсли;
    //Если Открыта() Тогда
    //    Закрыть();
    //КонецЕсли;
    //Если Операция.Статус = "Выполнено" Тогда
    //    ПоказатьОповещениеПользователя(НСтр("ru = 'Успешное завершение'"), , СопровождающийТекст, БиблиотекаКартинок.Успешно32);
    //Иначе
    //    Предупреждение = Новый Структура;
    //    Предупреждение.Вставить("Текст",    Операция.КраткоеПредставлениеОшибки);
    //    Предупреждение.Вставить("Подробно", Операция.ПодробноеПредставлениеОшибки);
    //    СтандартныеПодсистемыКлиент.ВывестиПредупреждение(ВладелецФормы, Предупреждение);
    //КонецЕсли;
КонецПроцедуры